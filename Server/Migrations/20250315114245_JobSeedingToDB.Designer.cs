// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315114245_JobSeedingToDB")]
    partial class JobSeedingToDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Application", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Server.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FixedSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("JobPostedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalaryFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTo")
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            Description = "Develop and maintain web applications.",
                            FixedSalary = 101000,
                            JobPostedOn = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 82000,
                            SalaryTo = 123000,
                            category = "IT",
                            country = "USA",
                            title = "Software Engineer"
                        },
                        new
                        {
                            Id = 2,
                            City = "Toronto",
                            Description = "Analyze business data and provide insights.",
                            FixedSalary = 76000,
                            JobPostedOn = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hybrid",
                            SalaryFrom = 61000,
                            SalaryTo = 92000,
                            category = "Analytics",
                            country = "Canada",
                            title = "Data Analyst"
                        },
                        new
                        {
                            Id = 3,
                            City = "London",
                            Description = "Oversee project timelines and resources.",
                            FixedSalary = 91000,
                            JobPostedOn = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "On-Site",
                            SalaryFrom = 72000,
                            SalaryTo = 115000,
                            category = "Management",
                            country = "UK",
                            title = "Project Manager"
                        },
                        new
                        {
                            Id = 4,
                            City = "Berlin",
                            Description = "Manage hiring and employee relations.",
                            FixedSalary = 67000,
                            JobPostedOn = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 63000,
                            SalaryTo = 71000,
                            category = "Human Resources",
                            country = "Germany",
                            title = "HR Specialist"
                        },
                        new
                        {
                            Id = 5,
                            City = "Paris",
                            Description = "Plan and execute marketing campaigns.",
                            FixedSalary = 64500,
                            JobPostedOn = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hybrid",
                            SalaryFrom = 52000,
                            SalaryTo = 77000,
                            category = "Marketing",
                            country = "France",
                            title = "Marketing Coordinator"
                        },
                        new
                        {
                            Id = 6,
                            City = "Amsterdam",
                            Description = "Design user interfaces and experiences.",
                            FixedSalary = 71500,
                            JobPostedOn = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "On-Site",
                            SalaryFrom = 56000,
                            SalaryTo = 87000,
                            category = "Design",
                            country = "Netherlands",
                            title = "UX Designer"
                        },
                        new
                        {
                            Id = 7,
                            City = "Sydney",
                            Description = "Protect systems and networks from cyber threats.",
                            FixedSalary = 89000,
                            JobPostedOn = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hybrid",
                            SalaryFrom = 76500,
                            SalaryTo = 103000,
                            category = "Security",
                            country = "Australia",
                            title = "Cybersecurity Analyst"
                        },
                        new
                        {
                            Id = 8,
                            City = "Bangalore",
                            Description = "Manage and optimize databases.",
                            FixedSalary = 84500,
                            JobPostedOn = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 73000,
                            SalaryTo = 96000,
                            category = "IT",
                            country = "India",
                            title = "Database Administrator"
                        },
                        new
                        {
                            Id = 9,
                            City = "San Francisco",
                            Description = "Evaluate business processes and performance.",
                            FixedSalary = 82500,
                            JobPostedOn = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "On-Site",
                            SalaryFrom = 67000,
                            SalaryTo = 98000,
                            category = "Business",
                            country = "USA",
                            title = "Business Analyst"
                        },
                        new
                        {
                            Id = 10,
                            City = "Vancouver",
                            Description = "Write and edit content for various platforms.",
                            FixedSalary = 59000,
                            JobPostedOn = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 46000,
                            SalaryTo = 72000,
                            category = "Writing",
                            country = "Canada",
                            title = "Content Writer"
                        },
                        new
                        {
                            Id = 11,
                            City = "Munich",
                            Description = "Maintain and troubleshoot network infrastructure.",
                            FixedSalary = 88000,
                            JobPostedOn = new DateTime(2025, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hybrid",
                            SalaryFrom = 69000,
                            SalaryTo = 107000,
                            category = "Networking",
                            country = "Germany",
                            title = "Network Engineer"
                        },
                        new
                        {
                            Id = 12,
                            City = "Lyon",
                            Description = "Optimize websites for search engines.",
                            FixedSalary = 69000,
                            JobPostedOn = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 59000,
                            SalaryTo = 79000,
                            category = "Digital Marketing",
                            country = "France",
                            title = "SEO Specialist"
                        },
                        new
                        {
                            Id = 13,
                            City = "Manchester",
                            Description = "Design and implement cloud solutions.",
                            FixedSalary = 112000,
                            JobPostedOn = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "On-Site",
                            SalaryFrom = 91000,
                            SalaryTo = 133000,
                            category = "Cloud Computing",
                            country = "UK",
                            title = "Cloud Architect"
                        },
                        new
                        {
                            Id = 14,
                            City = "Los Angeles",
                            Description = "Develop AI models and algorithms.",
                            FixedSalary = 127000,
                            JobPostedOn = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Hybrid",
                            SalaryFrom = 101000,
                            SalaryTo = 153000,
                            category = "Artificial Intelligence",
                            country = "USA",
                            title = "AI Engineer"
                        },
                        new
                        {
                            Id = 15,
                            City = "Pune",
                            Description = "Provide technical assistance to customers.",
                            FixedSalary = 57000,
                            JobPostedOn = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Remote",
                            SalaryFrom = 51000,
                            SalaryTo = 63000,
                            category = "Customer Support",
                            country = "India",
                            title = "Technical Support"
                        });
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
